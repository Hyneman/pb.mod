and
array
ascii
assert
boolean
boolean
break
byte
case
cast
compilercase
compilerdefault
compilerelse
compilerendif
compilerendselect
compilererror
compilerif
compilerselect
continue
debug
debugger
declare
declaremodule
default
define
defined
double
else
elseif
enddeclaremodule
endif
endimport
endinterface
endmacro
endmodule
endprocedure
endselect
endstructure
endunion
exit
explicit
extends
extensions
false
float
float
for
foreach
forever
global
if
import
importc
include
integer
interface
list
long
macro
map
module
newlist
newmap
next
not
null
offsetof
option
or
private
procedure
prototype
quad
repeat
select
sizeof
static
stringify
structure
symbol
to
true
unicode
union
unit
unless
until
using
wend
while
word
xor
yield